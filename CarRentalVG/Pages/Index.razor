@page "/"

@using CarRentalVG.Business.Classes
@using CarRentalVG.Common.Interfaces
@using CarRentalVG.Common.Enums
@inject BookingProcessor bp

<h1>Car Rental</h1>
@if (!string.IsNullOrEmpty(bp.alertMessage))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <p class="lead">@bp.alertMessage</p>
    </div>
}

<h5>Customers</h5>

<table class="table mb-5">
    <thead>
        <tr>
            <th>Ssn</th>
            <th>FirstName</th>
            <th>LastName</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><input type="text" id="ssn" name="ssn" @bind="bp.c.Ssn"         placeholder="SSN" /></td>
            <td><input type="text" id="ssn" name="ssn" @bind="bp.c.FirstName"   placeholder="First Name" /></td>
            <td><input type="text" id="ssn" name="ssn" @bind="bp.c.LastName"    placeholder="Last Name" /></td>
            <td><button class="btn btn-primary" @onclick="bp.AddCustomer">Add</button></td>
        </tr>
        @*For every Customer in the list created*@
        @foreach (var person in bp.GetCustomer())
        {
            <tr>                
                <td>@person.Ssn</td>
                <td>@person.FirstName</td>
                <td>@person.LastName</td>
            </tr>
        }
    </tbody>
    </table>
 


<h5>Vehicles</h5>
<table class="table mb-5">
    <thead>
        <tr>
            <th>RegNr</th>
            <th>Make</th>
            <th>Odometer</th>
            <th>Cost/km</th>
            <th>Vehicle Type</th>
            <th>Cost/day</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>


        <tr>
            <td><input @bind="bp.v.RegNo" placeholder="RegNo" disabled="@bp.TaskDelayInProgress" /></td>
            <td><input @bind="bp.v.Make" placeholder="Make" disabled="@bp.TaskDelayInProgress" /></td>
            <td><input @bind="bp.v.Odometer" placeholder="Odometer" disabled="@bp.TaskDelayInProgress" /></td>
            <td><input @bind="bp.v.CostKm" placeholder="Cost/km" disabled="@bp.TaskDelayInProgress" /></td>
            <td>
                <select class="form-select" @bind="bp.v.VehicleType" disabled="@bp.TaskDelayInProgress">
                @foreach(var vt in Enum.GetValues(typeof(VehicleTypes)))
                    {
                        <option value="@vt">@vt</option>
                    }
                </select></td>
            <td><input @bind="bp.v.CostDay" placeholder="Cost/day" disabled="@bp.TaskDelayInProgress" /></td>
            <td><button class="btn btn-primary" @onclick="bp.AddVehicle" disabled="@bp.TaskDelayInProgress">Add</button></td>
        </tr>


        @*For every vehicle in the list created*@
        @foreach (var vehicle in bp.GetVehicles())
        {
            <tr>
                <td>@vehicle.RegNo</td>
                <td>@vehicle.Make</td>
                <td>@vehicle.Odometer</td>
                <td>@vehicle.CostKm</td>
                <td>@vehicle.VehicleType</td>
                <td>@vehicle.CostDay</td>
                <td>
                  <span class="badge bg-@(vehicle.VehicleStatus == 
                  VehicleStatuses.Available ? "success" : "danger")">@vehicle.VehicleStatus
                  </span>
                </td>
                <td>

                    @if (vehicle.VehicleStatus == VehicleStatuses.Available)
                    {                    
                    <select class="form-select" @bind="bp.selectedCustomer.Ssn" disabled="@bp.TaskDelayInProgress">
                        @foreach (var cb in bp.GetCustomer())
                        {
                            <option value="@cb.Ssn">@cb.FirstName @cb.LastName</option>
                        }
                    </select>
                    }
                    @if (vehicle.VehicleStatus == VehicleStatuses.Booked)
                    {
                        <input @bind-value="bp.KmReturned" placeholder="Km-Return" disabled="@bp.TaskDelayInProgress" />
                    }      
                </td>
                <td>
                    @if (vehicle.VehicleStatus == VehicleStatuses.Available)
                    {
                    <button class="btn btn-primary" @onclick="(()=>bp.SubmitBooking(vehicle, bp.selectedCustomer))" disabled="@bp.TaskDelayInProgress">Book</button> 
                    }
                    @if (vehicle.VehicleStatus == VehicleStatuses.Booked)
                    {
                        <button class="btn btn-secondary" @onclick="(()=>bp.ReturnVehicle(vehicle, bp.KmReturned))">Close</button>
                    }
                </td>

            </tr>
        }
    </tbody>
</table>

<h5>Bookings</h5>
<table class="table">
    <thead>
        <tr>
            <th>RegNr</th>
            <th>Customer</th>
            <th>Km Rented</th>
            <th>Km Returned</th>
            <th>Pickup Date</th>
            <th>Return Date</th>
            <th>Cost</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>       
        @foreach (var booking in bp.GetBookings())
        {
            if(booking.Status)
            {                
            <tr>
                <td>@booking.Vehicle.RegNo</td>
                    <td>@booking.Customer.FirstName @booking.Customer.LastName</td>
                    

                    @* <td>@booking.Vehicle.Odometer</td> *@
                    <td>@booking.KmRented</td>
                <td></td>
                <td>@booking.PickupDate.ToString("dd/MM/yyyy")</td>
                <td></td>
                <td></td>
                <td><span class="badge bg-danger">Booked</span></td>
                </tr>
            }
            else 
            {
                <tr>
                    <td>@booking.Vehicle.RegNo</td>
                    <td>@booking.Customer.FirstName @booking.Customer.LastName</td>
                    <td>@booking.KmRented</td>
                    <td>@booking.KmReturned</td>
                    <td>@booking.PickupDate.ToString("dd/MM/yyyy")</td>
                    <td>@booking.ReturnDate</td>
                    <td>@booking.TotalCost</td>
                    <td><span class="badge bg-success">Closed</span></td>
                </tr>
            }
        }
    </tbody>
</table>


